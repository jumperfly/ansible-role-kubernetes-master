# Kubernetes master configuration
kube_master_taint_node: yes

# Kubernetes master kubelet overrides
kube_master_kubelet_args: --kubeconfig=/var/lib/kubelet/kubeconfig --pod-manifest-path=/etc/kubernetes/manifests --cluster-dns={{ kube_cluster_dns }} --cluster-domain={{ kube_cluster_domain }} --node-labels kubernetes.io/role=master {{ '--register-with-taints dedicated=master:NoSchedule' if kube_master_taint_node else '' }}

# Kubernetes apiserver configuration
kube_apiserver_iface: "{{ default_ipv4.alias }}"
kube_apiserver_etcd_group: etcd_nodes
kube_apiserver_admission_plugins: NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota

# Kubernetes controller-manager configuration
kube_controller_manager_iface: "{{ kube_apiserver_iface }}"

# SSL configuration
kube_apiserver_cert_dir: /srv/kubernetes
kube_apiserver_etcd_key: "{{ kube_apiserver_cert_dir }}/apiserver-{{ ansible_hostname }}-etcd-key.pem"
kube_apiserver_etcd_cert: "{{ kube_apiserver_cert_dir }}/apiserver-{{ ansible_hostname }}-etcd.pem"
kube_apiserver_etcd_ca_cert: "{{ kube_apiserver_cert_dir }}/apiserver-{{ ansible_hostname }}-etcd-chain.pem"
kube_apiserver_key: "{{ kube_apiserver_cert_dir }}/apiserver-{{ ansible_hostname }}-kube-key.pem"
kube_apiserver_cert: "{{ kube_apiserver_cert_dir }}/apiserver-{{ ansible_hostname }}-kube.pem"
kube_apiserver_ca_cert: "{{ kube_apiserver_cert_dir }}/apiserver-{{ ansible_hostname }}-kube-chain.pem"
